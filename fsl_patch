--- fslbuild/fsl/config/buildSettings.mk	2019-03-20 11:06:00.000000000 -0300
+++ fslbuild/fsl_patched/config/buildSettings.mk	2020-08-09 19:33:49.866095500 -0300
@@ -181,0 +182,72 @@
+#####################################################################
+#
+#       Mingw specific sys vars and ext libs
+#				Makefile auto-detects gcc version for Linux
+#
+#####################################################################
+ifeq ($(findstring MINGW64, $(SYSTYPE)), MINGW64)
+###############   System Vars   #####################################
+CC = gcc
+CXX = c++
+CXX11 = c++
+CSTATICFLAGS = -static
+CXXSTATICFLAGS = -static
+CFLAGS = -std=gnu99
+ARCHFLAGS = -m64 -msse3
+ARCHLDFLAGS = -Wl,-rpath,'$$ORIGIN/../lib'
+#
+# the below should be equivalent to "OPTFLAGS = -O3" (gcc 10.2.0) appart from the 
+# offending "-finline-functions" which conflicts with inline code in /src/newimage
+# neither "-std=gnu89" nor "OPTFLAGS = -O3 -fno-inline" would solve the problem
+#
+#OPTFLAGS = -O1 -falign-functions -falign-jumps -falign-labels -falign-loops\
+# -fcaller-saves -fcode-hoisting -fcrossjumping -fcse-follow-jumps -fipa-cp\
+# -fcse-skip-blocks -fdelete-null-pointer-checks -fdevirtualize -fipa-bit-cp\
+# -fdevirtualize-speculatively -fexpensive-optimizations -fgcse -fgcse-lm\
+# -fhoist-adjacent-loads -finline-small-functions -findirect-inlining -fipa-icf\
+# -fipa-vrp -fisolate-erroneous-paths-dereference -foptimize-sibling-calls\
+# -foptimize-strlen -fpartial-inlining -fpeephole2 -freorder-functions\
+# -frerun-cse-after-loop -fschedule-insns -fschedule-insns2 -fthread-jumps\
+# -fsched-interblock -fsched-spec -fstore-merging -fstrict-aliasing -fipa-sra\
+# -ftree-builtin-call-dce -ftree-pre -ftree-vrp -ftree-switch-conversion\
+# -ftree-tail-merge -flra-remat -fgcse-after-reload -fipa-cp-clone -fipa-ra \
+# -floop-interchange -floop-unroll-and-jam -fpeel-loops -fpredictive-commoning\
+# -fsplit-loops -ftree-loop-distribution -fsplit-paths -ftree-loop-vectorize\
+# -ftree-partial-pre -ftree-slp-vectorize -funswitch-loops -fvect-cost-model\
+# -fvect-cost-model=dynamic -fversion-loops-for-strides
+#
+GNU_ANSI_FLAGS = -Wall -pedantic -Wno-long-long -Wno-cpp -DBOOST_LOG_DYN_LINK
+ANSI_CFLAGS = ${GNU_ANSI_FLAGS}
+ANSI_CXXFLAGS = ${GNU_ANSI_FLAGS} -ansi -std=gnu++11
+RANLIB = ranlib
+FSLML = ${FSLDIR}/bin/fslm
+###############   External Libs   #####################################
+# Armadillo library
+LIB_NEWMAT = ${FSLEXTLIB} -llapack -lblas
+# openblas (don't need ???, see above)
+#LIB_NEWMAT += -lopenblas
+#
+# the below undefines are because -lapack -lblas flags are inserted in the wrong place, they should
+# be at the end of LIBS statement in the relevant individual Makesfiles (e.g. fsl/src/bint/Makefile)
+# this fix is not nice,but solves the issue without editing the Makefiles
+#
+ARCHLDFLAGS := $(ARCHLDFLAGS) -Wl,--undefined=dpotrf_,--undefined=dpotri_,--undefined=dgetrf_,--undefined=dgetri_
+ARCHLDFLAGS := $(ARCHLDFLAGS),--undefined=dgemm_,--undefined=dgemv_,--undefined=dgesdd_,--undefined=dgesv_
+ARCHLDFLAGS := $(ARCHLDFLAGS),--undefined=dgesvd_,--undefined=dsyevd_,--undefined=dsyev_,--undefined=dsyrk_
+ARCHLDFLAGS := $(ARCHLDFLAGS),--undefined=ddot_,--undefined=dgtsvx_,--undefined=dposvx_,--undefined=dgesvx_
+ARCHLDFLAGS := $(ARCHLDFLAGS),--undefined=dgbsvx_,--undefined=dgtsvx_,--undefined=dposv_,--undefined=dgbsv_
+ARCHLDFLAGS := $(ARCHLDFLAGS),--undefined=dgtsv_,--undefined=dgels_,--undefined=dgelsd_,--undefined=ilaenv_
+#
+# ZLIB library
+LIB_ZLIB = /mingw64/lib
+INC_ZLIB = /mingw64/include
+# VTK library
+VTKDIR_INC = /mingw64/include/vtk-8.2
+VTKDIR_LIB = /mingw64/lib
+VTKSUFFIX = -8.2
+# QT library
+LIB_QT = /mingw64/lib
+INC_QT = /mingw64/include
+
+endif # if Mingw
+
--- fslbuild/fsl/config/common/rules.mk	2019-03-20 11:06:00.000000000 -0300
+++ fslbuild/fsl_patched/config/common/rules.mk	2020-08-09 21:19:22.633016400 -0300
@@ -203,4 +203,22 @@
-	@for exefile in ${XFILES} ${SCRIPTS} verylongdummyname ; do \
-		if [ -f $$exefile ] ; then \
-			${INSTALL} -m 0775 $$exefile ${dest_BINDIR}/ ; \
-			echo ${INSTALL} -m 0775 $$exefile ${dest_BINDIR}/ ; \
+	@for exefile in ${XFILES} verylongdummyname ; do \
+		if [ $$exefile !=  verylongdummyname ] ; then \
+			if [[ `uname` == "MINGW64"* ]] ; then \
+				exefile=$${exefile}.exe ; \
+			fi ; \
+			if [ -f $$exefile ] ; then \
+				${INSTALL} -m 0775 $$exefile ${dest_BINDIR}/ ; \
+				if [ -f ${dest_BINDIR}/$${exefile##*/} ] ; then \
+					echo ${INSTALL} -m 0775 $$exefile ${dest_BINDIR}/ ; \
+				else \
+					echo error: ${INSTALL} -m 0775 $$exefile ${dest_BINDIR}/ failed; \
+				fi \
+			else \
+				echo error: $$exefile not found ; \
+			fi \
+		fi \
+	done
+	@echo "Installing stable scripts"
+	@for scriptfile in ${SCRIPTS} verylongdummyname ; do \
+		if [ -f $$scriptfile ] ; then \
+			${INSTALL} -m 0775 $$scriptfile ${dest_BINDIR}/ ; \
+			echo ${INSTALL} -m 0775 $$scriptfile ${dest_BINDIR}/ ; \
@@ -211 +229 @@
-			if [ `uname` = Darwin -o X`uname | grep CYGWIN`X != XX ] ; then \
+			if [ `uname` = Darwin -o X`uname | grep MINGW64`X != XX ] ; then \
@@ -238 +256 @@
-			if [ `uname` = Darwin -o X`uname | grep CYGWIN`X != XX ] ; then \
+			if [ `uname` = Darwin -o X`uname | grep MINGW64`X != XX ] ; then \
--- fslbuild/fsl/etc/fslconf/fsl.sh	2019-09-24 11:18:42.000000000 -0300
+++ fslbuild/fsl_patched/etc/fslconf/fsl.sh	2020-08-09 01:59:15.767467000 -0300
@@ -52,2 +52,2 @@
-#FSLCONFDIR=$FSLDIR/config
-#FSLMACHTYPE=`$FSLDIR/etc/fslconf/fslmachtype.sh`
+FSLCONFDIR=$FSLDIR/config
+FSLMACHTYPE=`$FSLDIR/etc/fslconf/fslmachtype.sh`
@@ -55 +55 @@
-#export FSLCONFDIR FSLMACHTYPE
+export FSLCONFDIR FSLMACHTYPE
--- fslbuild/fsl/extras/build	2019-09-02 07:51:11.000000000 -0300
+++ fslbuild/fsl_patched/extras/build	2020-08-09 01:59:15.767467000 -0300
@@ -90,0 +91,2 @@
+BUILDTCLTK=1
+BUILDLIBPNG=1
@@ -99 +101,10 @@
-PROJECTS="tcl tk"
+if [[ "$OS" == "MINGW64"* ]]; then
+  echo "MINGW64 build"
+  BUILDZLIB=0
+  BUILDICONV=0
+  BUILDTCLTK=0
+  BUILDLIBPNG=0
+fi
+if [ ${BUILDTCLTK} -eq 1 ]; then
+  PROJECTS="tcl tk"
+fi
@@ -103 +114,3 @@
-PROJECTS="${PROJECTS} libpng"
+if [ ${BUILDLIBPNG} -eq 1 ]; then
+  PROJECTS="${PROJECTS} libpng"
+fi
@@ -107,2 +120,6 @@
-PROJECTS="${PROJECTS} libgd libgdc libprob libcprob newmat cprob newran fftw"
-PROJECTS="${PROJECTS} boost libxml2-2.9.2 libxmlpp libsqlite libnlopt ../include/armawrap/dummy_newmat"
+if [[ "$OS" == "MINGW64"* ]]; then
+  PROJECTS="${PROJECTS} libgdc libprob libcprob newmat cprob newran ../include/armawrap/dummy_newmat"
+else
+  PROJECTS="${PROJECTS} libgd libgdc libprob libcprob newmat cprob newran fftw"
+  PROJECTS="${PROJECTS} boost libxml2-2.9.2 libxmlpp libsqlite libnlopt ../include/armawrap/dummy_newmat"
+fi
--- fslbuild/fsl/src/asl_mfree/asl_mfree.cc	2019-11-19 07:45:41.000000000 -0300
+++ fslbuild/fsl_patched/src/asl_mfree/asl_mfree.cc	2020-08-09 01:59:15.777467000 -0300
@@ -246,3 +246,3 @@
-            volume4D<float> stdout;
-            stdout.setmatrix(magstd.AsMatrix(1, nvox), mask);
-            save_volume4D(stdout, opts.outname.value() + "_stddev");
+            volume4D<float> stddevout;
+            stddevout.setmatrix(magstd.AsMatrix(1, nvox), mask);
+            save_volume4D(stddevout, opts.outname.value() + "_stddev");
--- fslbuild/fsl/src/CiftiLib-master/Cifti/CiftiFile.cxx	2016-10-19 10:17:55.000000000 -0200
+++ fslbuild/fsl_patched/src/CiftiLib-master/Cifti/CiftiFile.cxx	2020-08-09 01:59:15.777467000 -0300
@@ -85 +85 @@
-        return filesystem::absolute(AString_to_std_string(mypath)).native();
+        return filesystem::absolute(AString_to_std_string(mypath)).string();
@@ -97 +97 @@
-        return temp.normalize().native();
+        return temp.normalize().string();
@@ -101 +101 @@
-        return filesystem::canonical(temp).native();
+        return filesystem::canonical(temp).string();
--- fslbuild/fsl/src/fabber_core/fabber_core.cc	2019-11-19 07:45:20.000000000 -0300
+++ fslbuild/fsl_patched/src/fabber_core/fabber_core.cc	2020-08-09 01:59:15.777467000 -0300
@@ -125,0 +126,3 @@
+        #ifdef _WIN64
+        int errcode = atoi(getenv(name));
+        #else
@@ -126,0 +130 @@
+        #endif
--- fslbuild/fsl/src/flameo/Makefile	2018-10-02 10:46:58.000000000 -0300
+++ fslbuild/fsl_patched/src/flameo/Makefile	2020-08-09 01:59:15.777467000 -0300
@@ -13 +13 @@
-LIBS += -lutils -lnewimage -lmiscmaths -lm -lnewmat -lNewNifti -lcifti -lxml++-2.6 -lxml2 -lboost_filesystem -lboost_system -lznz -lprob -lz 
+LIBS += -lutils -lnewimage -lmiscmaths -lm -lnewmat -lNewNifti -lcifti -lxml++-2.6 -lxml2 -lboost_filesystem-mt -lboost_system-mt -lznz -lprob -lz 
--- fslbuild/fsl/src/fslsurface/fslsurfacemaths.cpp	2019-11-19 07:46:34.000000000 -0300
+++ fslbuild/fsl_patched/src/fslsurface/fslsurfacemaths.cpp	2020-08-09 01:59:15.787467000 -0300
@@ -79,2 +79,2 @@
-#ifdef __linux
-#else
+#ifdef __APPLE__
+//AGL=Apple Graphics Library
--- fslbuild/fsl/src/fslsurface/Makefile	2014-12-16 12:52:05.000000000 -0200
+++ fslbuild/fsl_patched/src/fslsurface/Makefile	2020-08-09 01:59:15.787467000 -0300
@@ -7,0 +8 @@
+ismingw = $(findstring mingw, $(FSLMACHTYPE))
@@ -10 +11,3 @@
-        FMLIBS += -lGL -lGLU
+   ifneq ($(ismingw),mingw)
+        FMLIBS += -lGL -lGLU 
+   endif
--- fslbuild/fsl/src/lesions/lesion_filling.cc	2019-11-19 07:44:56.000000000 -0300
+++ fslbuild/fsl_patched/src/lesions/lesion_filling.cc	2020-08-09 01:59:15.787467000 -0300
@@ -124,0 +125,3 @@
+    #ifdef _WIN64
+    int mrand=Max(Min(ceil((double(rand())/MAXRAND)*(max-min+1)),(max-min+1)),1)+min-1;    
+    #else
@@ -125,0 +129 @@
+    #endif
--- fslbuild/fsl/src/mcflirt/Log.cc	2019-11-19 07:47:11.000000000 -0300
+++ fslbuild/fsl_patched/src/mcflirt/Log.cc	2020-08-09 01:59:15.787467000 -0300
@@ -87,0 +88,3 @@
+      #ifdef _WIN64
+      if ( (ret = mkdir(dir.c_str()))!= 0){
+      #else
@@ -88,0 +92 @@
+      #endif
--- fslbuild/fsl/src/melodic/Makefile	2019-10-28 11:28:23.000000000 -0300
+++ fslbuild/fsl_patched/src/melodic/Makefile	2020-08-09 01:59:15.787467000 -0300
@@ -18 +18 @@
-LIBS += -lutils -lnewimage -lmiscplot -lmiscpic -lmiscmaths -lNewNifti -lcifti -lxml++-2.6 -lxml2 -lboost_filesystem -lboost_system -lznz -lnewmat -lprob -lm  -lgdc -lgd -lpng -lz
+LIBS += -lutils -lnewimage -lmiscplot -lmiscpic -lmiscmaths -lNewNifti -lcifti -lxml++-2.6 -lxml2 -lboost_filesystem-mt -lboost_system-mt -lznz -lnewmat -lprob -lm  -lgdc -lgd -lpng -lz
--- fslbuild/fsl/src/melodic/meldata.cc	2019-11-19 07:47:08.000000000 -0300
+++ fslbuild/fsl_patched/src/melodic/meldata.cc	2020-08-09 01:59:15.797467000 -0300
@@ -1018 +1018 @@
-      if(in>0){
+      if(in.is_open()){
--- fslbuild/fsl/src/miscvis/Makefile	2019-08-12 10:51:47.000000000 -0300
+++ fslbuild/fsl_patched/src/miscvis/Makefile	2020-08-09 21:27:18.933880100 -0300
@@ -24 +24 @@
-	$(CXX) ${CXXFLAGS} ${LDFLAGS} -o slicer slicer.o  ${LIBS}
+	$(CXX) ${CXXFLAGS} ${LDFLAGS} -o slicer slicer.o  ${LIBS}; sync
@@ -27 +27 @@
-	$(CXX) ${CXXFLAGS} ${LDFLAGS} -o overlay overlay.o ${LIBS}
+	$(CXX) ${CXXFLAGS} ${LDFLAGS} -o overlay overlay.o ${LIBS}; sync
@@ -30 +30 @@
-	$(CXX) ${CXXFLAGS} ${LDFLAGS} -o fsl_tsplot fsl_tsplot.o ${LIBS}
+	$(CXX) ${CXXFLAGS} ${LDFLAGS} -o fsl_tsplot fsl_tsplot.o ${LIBS}; sync
@@ -33 +33 @@
-	$(CXX) ${CXXFLAGS} ${LDFLAGS} -o fsl_boxplot fsl_boxplot.o ${LIBS}
+	$(CXX) ${CXXFLAGS} ${LDFLAGS} -o fsl_boxplot fsl_boxplot.o ${LIBS}; sync
@@ -36 +36 @@
-	$(CXX) ${CXXFLAGS} ${LDFLAGS} -o fsl_histogram fsl_histogram.o ${LIBS}
+	$(CXX) ${CXXFLAGS} ${LDFLAGS} -o fsl_histogram fsl_histogram.o ${LIBS}; sync
@@ -39 +39 @@
-	$(CC) $(CFLAGS) -o create_lut create_lut.c
+	$(CC) $(CFLAGS) -o create_lut create_lut.c; sync
@@ -49 +49 @@
-	./create_lut $(DESTDIR)/etc/luts/render
+	./create_lut $(DESTDIR)/etc/luts/render; sync; sleep 60  
@@ -52 +52 @@
-	$(CXX)  ${CXXFLAGS} ${LDFLAGS} -o pngappend pngappend.cc ${LIBS}
+	$(CXX)  ${CXXFLAGS} ${LDFLAGS} -o pngappend pngappend.cc ${LIBS}; sync
@@ -55 +55,2 @@
-	$(CC)  ${CXXFLAGS} ${LDFLAGS} -o $@ ${WOBJS} ${LIBS} 
\ No newline at end of file
+	$(CC)  ${CXXFLAGS} ${LDFLAGS} -o $@ ${WOBJS} ${LIBS}; sync
+    
\ No newline at end of file
--- fslbuild/fsl/src/mist-clean/Makefile	2019-01-07 12:22:09.000000000 -0200
+++ fslbuild/fsl_patched/src/mist-clean/Makefile	2020-08-09 01:59:15.797467000 -0300
@@ -3 +3 @@
-NLOPT_INC = ${FSLEXTINC}
+NLOPT_INC = /mingw64/include
@@ -5 +5 @@
-SQLITE_INC = ${FSLEXTINC}/libsqlite
+SQLITE_INC = /mingw64/include/sqlite3
@@ -13 +13 @@
-USRCXXFLAGS = -std=c++11
+USRCXXFLAGS = -std=gnu++11
@@ -26,2 +26,2 @@
-			-lboost_log -lboost_log_setup -lboost_thread -lboost_filesystem -lboost_date_time -lboost_chrono \
-			-lboost_system -lboost_serialization -lboost_regex -lwarpfns -lbasisfield -lnewimage -lmiscmaths \
+			-lboost_log-mt -lboost_log_setup-mt -lboost_thread-mt -lboost_filesystem-mt -lboost_date_time-mt -lboost_chrono-mt \
+			-lboost_system-mt -lboost_serialization-mt -lboost_regex-mt -lwarpfns -lbasisfield -lnewimage -lmiscmaths \
@@ -29 +29 @@
-			${SQLITE_LIB}/libsqlite3.a ${LIBRT}
+            -lsqlite3
--- fslbuild/fsl/src/newmesh/featurespace.cc	2019-11-19 07:46:23.000000000 -0300
+++ fslbuild/fsl_patched/src/newmesh/featurespace.cc	2020-08-09 01:59:15.797467000 -0300
@@ -75 +75 @@
-  NEWMESH::newmesh featurespace::Initialize(const int &ico, vector<NEWMESH::newmesh> &IN,const bool & exclude){
+  NEWMESH::newmesh featurespace::Initialize(const int &ico, vector<NEWMESH::newmesh> &in,const bool & exclude){
@@ -79,2 +79,2 @@
-    if(IN.size()!=CMfile_in.size()){ throw  NEWMESHException(" NEWMESH::featurespace::Initialize do not have the same number of datasets and surface meshes");	}
-    else {DATA.resize(IN.size(),boost::shared_ptr<BFMatrix > ()); }
+    if(in.size()!=CMfile_in.size()){ throw  NEWMESHException(" NEWMESH::featurespace::Initialize do not have the same number of datasets and surface meshes");	}
+    else {DATA.resize(in.size(),boost::shared_ptr<BFMatrix > ()); }
@@ -86 +86 @@
-    for (unsigned int i=0;i<IN.size();i++){
+    for (unsigned int i=0;i<in.size();i++){
@@ -88,2 +88,2 @@
-      bool isfunc=set_data(CMfile_in[i],DATA[i],IN[i],_issparse); 
-      IN[i].set_pvalues(DATA[i]->AsMatrix());
+      bool isfunc=set_data(CMfile_in[i],DATA[i],in[i],_issparse); 
+      in[i].set_pvalues(DATA[i]->AsMatrix());
@@ -91 +91 @@
-      if(ico==0){icotmp=IN[i];} 
+      if(ico==0){icotmp=in[i];} 
@@ -96 +96 @@
-		NEWMESH::newmesh excl_tmp=create_exclusion(IN[i],DATA[i]->AsMatrix(),_fthreshold[0],_fthreshold[1]);
+		NEWMESH::newmesh excl_tmp=create_exclusion(in[i],DATA[i]->AsMatrix(),_fthreshold[0],_fthreshold[1]);
@@ -103 +103 @@
-      resample(_sigma_in[i],DATA[i],icotmp,IN[i],EXCL[i]);
+      resample(_sigma_in[i],DATA[i],icotmp,in[i],EXCL[i]);
@@ -112 +112 @@
-      for (unsigned int i=1;i<IN.size();i++){
+      for (unsigned int i=1;i<in.size();i++){
@@ -118 +118 @@
-		  for (unsigned int i=0;i<IN.size();i++){
+		  for (unsigned int i=0;i<in.size();i++){
@@ -126 +126 @@
-      for (unsigned int i=0;i<IN.size();i++)
+      for (unsigned int i=0;i<in.size();i++)
@@ -131 +131 @@
-      for (unsigned int i=0;i<IN.size();i++){
+      for (unsigned int i=0;i<in.size();i++){
@@ -169 +169 @@
-  void featurespace::smooth(NEWMESH::newmesh &IN, boost::shared_ptr<BFMatrix> &tmp, const double &_sigma)
+  void featurespace::smooth(NEWMESH::newmesh &in, boost::shared_ptr<BFMatrix> &tmp, const double &_sigma)
@@ -174 +174 @@
-    R.smooth_data(_sigma,tmp,IN);
+    R.smooth_data(_sigma,tmp,in);
--- fslbuild/fsl/src/newmesh/meshfns.cc	2019-11-19 07:46:24.000000000 -0300
+++ fslbuild/fsl_patched/src/newmesh/meshfns.cc	2020-08-09 01:59:15.807467000 -0300
@@ -1045 +1045 @@
-  void histogram_normalization(NEWMESH::newmesh  & IN, const NEWMESH::newmesh & REF,const string &excl_in,const string &excl_ref, int numbins){
+  void histogram_normalization(NEWMESH::newmesh  & in, const NEWMESH::newmesh & REF,const string &excl_in,const string &excl_ref, int numbins){
@@ -1049 +1049 @@
-    ColumnVector datain(IN.nvertices()),dataref(REF.nvertices());
+    ColumnVector datain(in.nvertices()),dataref(REF.nvertices());
@@ -1051,2 +1051,2 @@
-    for (int i=0;i<IN.nvertices();i++)
-      datain(i+1)=IN.get_pvalue(i);
+    for (int i=0;i<in.nvertices();i++)
+      datain(i+1)=in.get_pvalue(i);
@@ -1070,2 +1070,2 @@
-    for (int i=1;i<=IN.nvertices();i++)
-      IN.set_pvalue(i-1,datain(i));
+    for (int i=1;i<=in.nvertices();i++)
+      in.set_pvalue(i-1,datain(i));
@@ -1076 +1076 @@
-  void multivariate_histogram_normalization(BFMatrix &IN , BFMatrix & REF,boost::shared_ptr<NEWMESH::newmesh> EXCL_IN,boost::shared_ptr<NEWMESH::newmesh> EXCL_REF, bool rescale){
+  void multivariate_histogram_normalization(BFMatrix &in , BFMatrix & REF,boost::shared_ptr<NEWMESH::newmesh> EXCL_IN,boost::shared_ptr<NEWMESH::newmesh> EXCL_REF, bool rescale){
@@ -1079 +1079 @@
-    ColumnVector datain(IN.Ncols()),dataref(REF.Ncols());
+    ColumnVector datain(in.Ncols()),dataref(REF.Ncols());
@@ -1081 +1081 @@
-    ColumnVector excluded_in(IN.Ncols()); excluded_in=1;
+    ColumnVector excluded_in(in.Ncols()); excluded_in=1;
@@ -1085 +1085 @@
-    for(int d=1; d<=(int) IN.Nrows();d++){      
+    for(int d=1; d<=(int) in.Nrows();d++){      
@@ -1087,2 +1087,2 @@
-      for (unsigned int i=1;i<=IN.Ncols();i++){
-	datain(i)=IN.Peek(d,i);
+      for (unsigned int i=1;i<=in.Ncols();i++){
+	datain(i)=in.Peek(d,i);
@@ -1124,2 +1124,2 @@
-      for (unsigned int i=1;i<=IN.Ncols();i++){
-	IN.Set(d,i,datain(i));
+      for (unsigned int i=1;i<=in.Ncols();i++){
+	in.Set(d,i,datain(i));
@@ -1131 +1131 @@
-	  set_range(d,IN,excluded_in,max,min);
+	  set_range(d,in,excluded_in,max,min);
@@ -1135 +1135 @@
-	  get_range(d,IN,excluded_in,max,min);
+	  get_range(d,in,excluded_in,max,min);
@@ -1284 +1284 @@
-   bool check_for_intersections(const int ind, const double &eps, NEWMESH::newmesh &IN){  // not needed if we have negdet?
+   bool check_for_intersections(const int ind, const double &eps, NEWMESH::newmesh &in){  // not needed if we have negdet?
@@ -1286 +1286 @@
-    NEWMESH::Pt c = IN.get_coord(ind);
+    NEWMESH::Pt c = in.get_coord(ind);
@@ -1292,2 +1292,2 @@
-    NEWMESH::Triangle tr=IN.get_triangle_from_vertex(ind,0);
-    c = IN.get_coord(ind);
+    NEWMESH::Triangle tr=in.get_triangle_from_vertex(ind,0);
+    c = in.get_coord(ind);
@@ -1296,2 +1296,2 @@
-    for (vector<int>::const_iterator j=IN.tIDbegin(ind) ; j!=IN.tIDend(ind); j++){
-      NEWMESH::Triangle tr2=IN.get_triangle(*j);
+    for (vector<int>::const_iterator j=in.tIDbegin(ind) ; j!=in.tIDend(ind); j++){
+      NEWMESH::Triangle tr2=in.get_triangle(*j);
@@ -1444 +1444 @@
-  ColumnVector barycentricSurfaceGrad(const int &index,const NEWMESH::newmesh &IN)	     
+  ColumnVector barycentricSurfaceGrad(const int &index,const NEWMESH::newmesh &in)	     
@@ -1455 +1455 @@
-    point=IN.get_coord(index);
+    point=in.get_coord(index);
@@ -1461 +1461 @@
-    for (vector<int>::const_iterator j=IN.tIDbegin(index);j!=IN.tIDend(index); j++){
+    for (vector<int>::const_iterator j=in.tIDbegin(index);j!=in.tIDend(index); j++){
@@ -1464 +1464 @@
-      v0 = IN.get_triangle_vertex(*j,0);  v1 = IN.get_triangle_vertex(*j,1); v2 = IN.get_triangle_vertex(*j,2);
+      v0 = in.get_triangle_vertex(*j,0);  v1 = in.get_triangle_vertex(*j,1); v2 = in.get_triangle_vertex(*j,2);
@@ -1466,3 +1466,3 @@
-      n0 = IN.get_triangle_vertexID(*j,0);
-      n1 = IN.get_triangle_vertexID(*j,1);
-      n2=  IN.get_triangle_vertexID(*j,2);
+      n0 = in.get_triangle_vertexID(*j,0);
+      n1 = in.get_triangle_vertexID(*j,1);
+      n2=  in.get_triangle_vertexID(*j,2);
@@ -1471,3 +1471,3 @@
-      d0 = IN.get_pvalue(n0); // gets the similarity terms for these
-      d1 = IN.get_pvalue(n1); 
-      d2 = IN.get_pvalue(n2); 
+      d0 = in.get_pvalue(n0); // gets the similarity terms for these
+      d1 = in.get_pvalue(n1); 
+      d2 = in.get_pvalue(n2); 
@@ -1842,3 +1842,3 @@
-  NEWMESH::newmesh create_exclusion(NEWMESH::newmesh &IN,const Matrix & DATA,const float &thrl,const float &thru){
-    Matrix cfweighting(1,IN.npvalues());
-    NEWMESH::newmesh EXCL=IN;
+  NEWMESH::newmesh create_exclusion(NEWMESH::newmesh &in,const Matrix & DATA,const float &thrl,const float &thru){
+    Matrix cfweighting(1,in.npvalues());
+    NEWMESH::newmesh EXCL=in;
@@ -1848 +1848 @@
-    for (int i=1;i<=IN.npvalues();i++){
+    for (int i=1;i<=in.npvalues();i++){
--- fslbuild/fsl/src/newmesh/resampler.cc	2019-11-19 07:46:25.000000000 -0300
+++ fslbuild/fsl_patched/src/newmesh/resampler.cc	2020-08-09 01:59:15.807467000 -0300
@@ -397 +397 @@
-  void resampler::barycentric_interpolation(NEWMESH::newmesh &IN, const NEWMESH::newmesh  &ref, boost::shared_ptr<BFMatrix> &data, boost::shared_ptr<NEWMESH::newmesh> &EXCL, boost::shared_ptr<RELATIONS > _rel)
+  void resampler::barycentric_interpolation(NEWMESH::newmesh &in, const NEWMESH::newmesh  &ref, boost::shared_ptr<BFMatrix> &data, boost::shared_ptr<NEWMESH::newmesh> &EXCL, boost::shared_ptr<RELATIONS > _rel)
@@ -404 +404 @@
-    vector<map<int,double> > adapt=get_all_adap_barycentric_weights(IN,exclusion,EXCL,_rel);
+    vector<map<int,double> > adapt=get_all_adap_barycentric_weights(in,exclusion,EXCL,_rel);
@@ -485 +485 @@
-  vector<std::map<int,double> > resampler::get_all_adap_barycentric_weights(NEWMESH::newmesh &IN, NEWMESH::newmesh &ref,  boost::shared_ptr<NEWMESH::newmesh> &EXCL, boost::shared_ptr<RELATIONS > _rel){
+  vector<std::map<int,double> > resampler::get_all_adap_barycentric_weights(NEWMESH::newmesh &in, NEWMESH::newmesh &ref,  boost::shared_ptr<NEWMESH::newmesh> &EXCL, boost::shared_ptr<RELATIONS > _rel){
@@ -491 +491 @@
-    if(ref.nvertices() > IN.nvertices()){ang=guess_angular_spacing(IN.nvertices()); }
+    if(ref.nvertices() > in.nvertices()){ang=guess_angular_spacing(in.nvertices()); }
@@ -493 +493 @@
-    if(!_rel.get() || (_rel->Ncols()!=IN.nvertices() && _rel->Ncols()!=ref.nvertices())){ 
+    if(!_rel.get() || (_rel->Ncols()!=in.nvertices() && _rel->Ncols()!=ref.nvertices())){ 
@@ -496 +496 @@
-      REL = boost::shared_ptr<RELATIONS > ( new RELATIONS(ref,IN,ang));
+      REL = boost::shared_ptr<RELATIONS > ( new RELATIONS(ref,in,ang));
@@ -500 +500 @@
-	_reverseREL=boost::shared_ptr<RELATIONS > ( new RELATIONS (REL->invert_relations(IN,ref,ang)));
+	_reverseREL=boost::shared_ptr<RELATIONS > ( new RELATIONS (REL->invert_relations(in,ref,ang)));
@@ -505 +505 @@
- 	if(_method=="ADAP_BARY") _reverseREL=boost::shared_ptr<RELATIONS > ( new RELATIONS (_rel->invert_relations(IN,ref,ang)));
+ 	if(_method=="ADAP_BARY") _reverseREL=boost::shared_ptr<RELATIONS > ( new RELATIONS (_rel->invert_relations(in,ref,ang)));
@@ -509 +509 @@
-	REL=boost::shared_ptr<RELATIONS > ( new RELATIONS (_rel->invert_relations(ref,IN,ang)));
+	REL=boost::shared_ptr<RELATIONS > ( new RELATIONS (_rel->invert_relations(ref,in,ang)));
@@ -512 +512 @@
-    check_scale(IN,ref); 
+    check_scale(in,ref); 
@@ -514 +514 @@
-    forward=get_all_barycentric_weights(ref,IN,REL);  // get forward weights i.e. find for each reference vertex which source mesh vertices surround it and what are their barycentric weights
+    forward=get_all_barycentric_weights(ref,in,REL);  // get forward weights i.e. find for each reference vertex which source mesh vertices surround it and what are their barycentric weights
@@ -520,2 +520,2 @@
-      //	_reverseREL=boost::shared_ptr<RELATIONS > ( new RELATIONS (_rel->invert_relations(IN,exclusion,ang)));
-      reverse=get_all_barycentric_weights(IN,ref,_reverseREL); // calculate reverse weights i.e. weights for each source mesh vertex
+      //	_reverseREL=boost::shared_ptr<RELATIONS > ( new RELATIONS (_rel->invert_relations(in,exclusion,ang)));
+      reverse=get_all_barycentric_weights(in,ref,_reverseREL); // calculate reverse weights i.e. weights for each source mesh vertex
@@ -523 +523 @@
-      int numOldNodes=IN.nvertices();
+      int numOldNodes=in.nvertices();
@@ -534 +534 @@
-	  oldAreas[oldNode]=computevertexArea(oldNode,IN);
+	  oldAreas[oldNode]=computevertexArea(oldNode,in);
@@ -832 +832 @@
-  void resampler::smooth_data(const double & sigma,  boost::shared_ptr<BFMatrix>  &data, NEWMESH::newmesh  &IN)
+  void resampler::smooth_data(const double & sigma,  boost::shared_ptr<BFMatrix>  &data, NEWMESH::newmesh  &in)
@@ -836 +836 @@
-    upsample_w_interpolation(IN,IN,sigma,data,EXCL);
+    upsample_w_interpolation(in,in,sigma,data,EXCL);
@@ -964 +964 @@
-  // Here reference is the untransformed regular mesh and IN is the transformed mesh
+  // Here reference is the untransformed regular mesh and in is the transformed mesh
--- fslbuild/fsl/src/NewNifti/nifti2.h	2019-10-02 09:10:25.000000000 -0300
+++ fslbuild/fsl_patched/src/NewNifti/nifti2.h	2020-08-09 01:59:15.807467000 -0300
@@ -0,0 +1 @@
+#include <stdint.h>
--- fslbuild/fsl/src/topup/topup.cpp	2019-11-19 07:45:11.000000000 -0300
+++ fslbuild/fsl_patched/src/topup/topup.cpp	2020-08-09 01:59:15.817467000 -0300
@@ -85,0 +86 @@
+#ifndef _WIN64
@@ -86,0 +88 @@
+#endif
@@ -102,0 +105 @@
+  #ifndef _WIN64
@@ -104 +107 @@
-
+  #endif
--- fslbuild/fsl/src/utils/functions.cc	2019-11-19 07:45:29.000000000 -0300
+++ fslbuild/fsl_patched/src/utils/functions.cc	2020-08-09 01:59:15.817467000 -0300
@@ -86,13 +86,13 @@
-  template<> string Option<bool>::config_key() const
-  {
-    if(set()) {
-      string key(long_form());
-      if( key == "" )
-	key = short_form();
-
-      return key;
-    } else
-      return "";
-  }
-
-  template<> string Option<bool>::value_string() const { return ""; }
+///  template<> string Option<bool>::config_key() const
+///  {
+///    if(set()) {
+///      string key(long_form());
+///      if( key == "" )
+///	key = short_form();
+///
+///      return key;
+///    } else
+///      return "";
+///  }
+///
+///  template<> string Option<bool>::value_string() const { return ""; }
@@ -127,2 +127,2 @@
-    if (Utilities::UserStreamFlag.find("OutputType") != Utilities::UserStreamFlag.end() &&
-	os.iword(Utilities::UserStreamFlag["OutputType"]) == Utilities::DetailedOutput) {
+///    if (Utilities::UserStreamFlag.find("OutputType") != Utilities::UserStreamFlag.end() &&
+///	os.iword(Utilities::UserStreamFlag["OutputType"]) == Utilities::DetailedOutput) {
@@ -130,4 +130,4 @@
-    }
-    else {
-      if (set()) os << config_key().substr(0, config_key().find("="));
-    }
+///    }
+///    else {
+///      if (set()) os << config_key().substr(0, config_key().find("="));
+///    }
--- fslbuild/fsl/src/utils/options.h	2019-11-19 07:45:30.000000000 -0300
+++ fslbuild/fsl_patched/src/utils/options.h	2020-08-09 01:59:15.817467000 -0300
@@ -258,2 +258,2 @@
-    virtual std::string value_string() const = 0;
-    virtual std::string config_key() const = 0;
+///    virtual std::string value_string() const = 0;
+///    virtual std::string config_key() const = 0;
@@ -375,18 +375,18 @@
-    std::string config_key() const
-    {
-      std::string key(long_form());
-      if( key != "" )
-	key = key + "=";
-      else
-	key = short_form() + " ";
-
-      return key;
-    }
-
-    std::string value_string() const
-    {
-      std::ostringstream os;
-      os << value();
-
-      return os.str();
-    }
+///    std::string config_key() const
+///    {
+///      std::string key(long_form());
+///      if( key != "" )
+///	key = key + "=";
+///      else
+///	key = short_form() + " ";
+///
+///      return key;
+///    }
+///
+///    std::string value_string() const
+///    {
+///      std::ostringstream os;
+///      os << value();
+///
+///      return os.str();
+///    }
@@ -425,2 +425,3 @@
-      os << "# " << help_text() << std::endl
-	 << config_key() << value_string();
+      os << "# " << help_text() << std::endl;  ///trailing ";" added
+///      os << "# " << help_text() << std::endl
+///	 << config_key() << value_string();
